@use 'sass:math';
@use '../abstracts/variables' as var;

$utilities: (
  'padding': (
    'prefix': 'p',
    'values': (
      '0': 0,
      '1': var.$padding-base,
      '2': var.$padding-base * 2,
      '3': var.$padding-base * 4,
      '4': var.$padding-base * 6,
      '5': var.$padding-base * 8,
    ),
  ),
  'padding-left': (
    'prefix': 'pl',
    'values': (
      '0': 0,
      '1': var.$padding-base,
      '2': var.$padding-base * 2,
      '3': var.$padding-base * 4,
      '4': var.$padding-base * 6,
      '5': var.$padding-base * 8,
    ),
  ),
  'padding-right': (
    'prefix': 'pr',
    'values': (
      '0': 0,
      '1': var.$padding-base,
      '2': var.$padding-base * 2,
      '3': var.$padding-base * 4,
      '4': var.$padding-base * 6,
      '5': var.$padding-base * 8,
    ),
  ),
  'padding-top': (
    'prefix': 'pt',
    'values': (
      '0': 0,
      '1': var.$padding-base,
      '2': var.$padding-base * 2,
      '3': var.$padding-base * 4,
      '4': var.$padding-base * 6,
      '5': var.$padding-base * 8,
    ),
  ),
  'padding-bottom': (
    'prefix': 'pb',
    'values': (
      '0': 0,
      '1': var.$padding-base,
      '2': var.$padding-base * 2,
      '3': var.$padding-base * 4,
      '4': var.$padding-base * 6,
      '5': var.$padding-base * 8,
    ),
  ),
  'margin': (
    'prefix': 'm',
    'values': (
      '0': 0,
      '1': var.$margin-base,
      '2': var.$margin-base * 2,
      '3': var.$margin-base * 4,
      '4': var.$margin-base * 6,
      '5': var.$margin-base * 8,
    ),
  ),
  'margin-left': (
    'prefix': 'ml',
    'values': (
      '0': 0,
      '1': var.$margin-base,
      '2': var.$margin-base * 2,
      '3': var.$margin-base * 4,
      '4': var.$margin-base * 6,
      '5': var.$margin-base * 8,
    ),
  ),
  'margin-right': (
    'prefix': 'mr',
    'values': (
      '0': 0,
      '1': var.$margin-base,
      '2': var.$margin-base * 2,
      '3': var.$margin-base * 4,
      '4': var.$margin-base * 6,
      '5': var.$margin-base * 8,
    ),
  ),
  'margin-top': (
    'prefix': 'mt',
    'values': (
      '0': 0,
      '1': var.$margin-base,
      '2': var.$margin-base * 2,
      '3': var.$margin-base * 4,
      '4': var.$margin-base * 6,
      '5': var.$margin-base * 8,
    ),
  ),
  'margin-bottom': (
    'prefix': 'mb',
    'values': (
      '0': 0,
      '1': var.$margin-base,
      '2': var.$margin-base * 2,
      '3': var.$margin-base * 4,
      '4': var.$margin-base * 6,
      '5': var.$margin-base * 8,
    ),
  ),
  'opacity': (
    'prefix': 'o',
    'values': (
      '10': 0.1,
      '20': 0.2,
      '30': 0.3,
      '40': 0.4,
      '50': 0.5,
      '60': 0.6,
      '70': 0.7,
      '80': 0.8,
      '90': 0.9,
      '100': 1,
    ),
  ),
  'border-radius': (
    'prefix': 'br',
    'values': (
      'default': var.$border-radius-base,
      'none': 0,
      'xs': math.div(var.$border-radius-base, 4),
      'sm': math.div(var.$border-radius-base, 2),
      'lg': var.$border-radius-base * 2,
      'full': 50%,
    ),
  ),
  'font-size': (
    'prefix': 'font',
    'values': (
      'sm': var.$font-size-sm,
      'md': var.$font-size-base,
      'lg': var.$font-size-lg,
      'xl': var.$font-size-xl,
      'xxl': var.$font-size-xxl,
    ),
  ),
);

// create utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, 'prefix');
  $values: map-get($map, 'values');

  @each $k, $v in $values {
    @if ($k == 'default') {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: $v;
      }
    }
  }
}
